server.port=8000

spring.datasource.password=${DB_PASSWORD}
#spring.datasource.url=jdbc:postgresql://postgres:5432/restAppDataBase
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USER}


spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.show-sql=true

spring.jpa.hibernate.ddl-auto=update

client-id=patient-api-app
resource-url=http://keycloak:8080/realms/patient-system/protocol/openid-connect/token

grant-type=password

spring.security.oauth2.client.registration.keycloak.client-id=patient-api-app
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid

spring.security.oauth2.client.provider.keycloak.issuer-uri=http://keycloak:8080/realms/patient-system
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://keycloak:8080/realms/patient-system


#spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/patient-system
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/patient-system